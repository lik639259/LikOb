-- 1. 创建表
CREATE TABLE employees (
    id INT,
    name TEXT,
    age INT,
    salary FLOAT,
    department TEXT,
    hire_date TEXT
);

-- 2. 插入测试数据
INSERT INTO employees VALUES (1, 'Alice', 25, 5000.0, 'IT', '2022-01-15');
INSERT INTO employees VALUES (2, 'Bob', 30, 6000.0, 'HR', '2021-06-20');
INSERT INTO employees VALUES (3, 'Charlie', 35, 7500.0, 'IT', '2020-03-10');
INSERT INTO employees VALUES (4, 'David', 28, 4500.0, 'Marketing', '2022-08-01');
INSERT INTO employees VALUES (5, 'Eve', 32, 6500.0, 'HR', '2021-04-15');
INSERT INTO employees VALUES (6, 'Frank', 40, 8000.0, 'IT', '2019-11-25');
INSERT INTO employees VALUES (7, 'Grace', 27, 4800.0, 'Marketing', '2022-03-10');
INSERT INTO employees VALUES (8, 'Henry', 33, 7000.0, 'HR', '2020-09-01');
INSERT INTO employees VALUES (9, 'Ivy', 29, 5500.0, 'IT', '2021-12-05');
INSERT INTO employees VALUES (10, 'Jack', 31, 6200.0, 'Marketing', '2021-07-20');

-- 3. 基本查询测试
-- 3.1 查询所有数据
SELECT * FROM employees;

-- 3.2 选择特定列
SELECT name, age, department FROM employees;

-- 4. WHERE 条件测试
-- 4.1 基本比较
SELECT name, salary FROM employees WHERE salary > 6000;

-- 4.2 AND 条件
SELECT name, age, salary FROM employees 
WHERE age < 30 AND salary > 4500;

-- 4.3 OR 条件
SELECT name, department, salary FROM employees 
WHERE department = 'IT' OR salary > 7000;

-- 4.4 IN 操作
SELECT name, department FROM employees 
WHERE department IN ('IT', 'HR');

-- 4.5 BETWEEN 操作
SELECT name, age FROM employees 
WHERE age BETWEEN 25 AND 30;

-- 4.6 LIKE 操作
SELECT name, department FROM employees 
WHERE name LIKE 'A%';

-- 5. ORDER BY 测试
-- 5.1 单列排序
SELECT name, salary FROM employees 
ORDER BY salary DESC;

-- 5.2 多列排序
SELECT name, department, salary FROM employees 
ORDER BY department ASC, salary DESC;

-- 6. GROUP BY 测试
-- 6.1 基本分组 
///////////
SELECT department, COUNT(*) as count 
FROM employees 
GROUP BY department;
错误: '*'
///////////

-- 6.2 带聚合函数
SELECT department, 
       COUNT(*) as count, 
       AVG(salary) as avg_salary,
       MAX(salary) as max_salary,
       MIN(salary) as min_salary
FROM employees 
GROUP BY department;

-- 7. 复杂查询测试
-- 7.1 组合条件
///////////
SELECT name, age, salary, department
FROM employees
WHERE (department IN ('IT', 'HR') AND salary > 6000)
   OR (age < 30 AND salary > 5000)
ORDER BY salary DESC;
错误: maximum recursion depth exceeded in comparison
///////////

-- 7.2 分组后过滤
///////////
SELECT department, AVG(salary) as avg_salary
FROM employees
GROUP BY department
HAVING avg_salary > 6000
ORDER BY avg_salary DESC;
错误: 未知的列名或别名: avg_salary
///////////

-- 8. UPDATE 测试
-- 8.1 基本更新
UPDATE employees 
SET salary = salary * 1.1 
WHERE department = 'IT';

-- 8.2 查看更新结果
SELECT name, department, salary 
FROM employees 
WHERE department = 'IT';

-- 9. DELETE 测试
-- 9.1 条件删除
DELETE FROM employees 
WHERE age > 35;

-- 9.2 查看删除结果
SELECT * FROM employees 
ORDER BY id;